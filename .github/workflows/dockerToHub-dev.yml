name: DEV DEPLOY TO TX
on:
  workflow_dispatch:
#  push:
#    branches:
#      - dev

jobs:
  build:
    name: build test image to aly
    # runs-on: thinkpad
    runs-on: self
    #    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: 'dev'
          clean: false
          github-server-url: 'https://gh.siji.ci'
      - name: build and deploy to Docker Hub
        run: |
          echo ${{ secrets.ALY_DOCKER_PASSWORD }} | docker login registry.cn-hangzhou.aliyuncs.com -u ${{ secrets.ALY_DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.DOCKER_ENV }}" > .env
          echo "COMPOSE_PROJECT_NAME=test-chatgpt-web" >> .env
          bash ./start.sh
          # 替换测试镜像
          sed -i 's@image: registry.cn-hangzhou.aliyuncs.com/si-private/chatgpt-next-web@image: registry.cn-hangzhou.aliyuncs.com/si-private/chatgpt-next-web:test@g' docker-compose.yml
          sed -i 's|23000:|23001:|g' docker-compose.yml
          docker-compose build
          docker-compose push
          yes | docker system prune --filter "until=168h"
  deploy:
    name: 部署到dev服务器
    runs-on: self
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          clean: true
          ref: 'dev'
          github-server-url: 'https://gh.siji.ci'
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Sync repository to tx
        run: |
          yes | docker image prune
          ssh -o StrictHostKeyChecking=no root@tx.xiaosi.cc 'mkdir -p /data/test/ChatGPT-Next-Web'
          rsync -az -e 'ssh -o StrictHostKeyChecking=no' --delete $GITHUB_WORKSPACE/ root@tx.xiaosi.cc:/data/test/ChatGPT-Next-Web
      - name: deploy-to-tx
        uses: appleboy/ssh-action@master
        env:
         SERVER_WORKDIR: ${{ secrets.SERVER_WORKDIR }} #传递工作目录变量
        with:
          host: tx.xiaosi.cc #服务器地址
          username: root #用户名
          key: ${{ secrets.SSH_PRIVATE_KEY }} #私钥 安全问题一定都以变量的方式传递！！！
          envs: SERVER_WORKDIR,ALY_DOCKER_PASSWORD,ALY_DOCKER_USERNAME,DOCKER_ENV #使用工作目录变量
          script: |
            cd /data/test/ChatGPT-Next-Web
            echo "${{ secrets.DOCKER_ENV }}" > .env
            # 测试分支,
            echo "COMPOSE_PROJECT_NAME=test-chatgpt-web" >> .env
            sed -i 's@image: registry.cn-hangzhou.aliyuncs.com/si-private/chatgpt-next-web@image: registry.cn-hangzhou.aliyuncs.com/si-private/chatgpt-next-web:test@g' docker-compose.yml
            echo ${{ secrets.ALY_DOCKER_PASSWORD }} | docker login registry.cn-hangzhou.aliyuncs.com -u ${{ secrets.ALY_DOCKER_USERNAME }} --password-stdin
            sed -i 's|23000:|23001:|g' docker-compose.yml
            sed -i 's|container_name:|#container_name:|g' docker-compose.yml
            docker-compose pull && docker-compose up -d
            yes | docker image prune
            rm -rf /www/server/nginx/proxy_cache_dir/*
            rm -rf /www/server/nginx/proxy_temp_dir/*
